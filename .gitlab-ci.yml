include:
  # gitlab job definitions. see https://gitlab.com/gitlab-org/gitlab/-/tree/master/lib/gitlab/ci/templates/Jobs
  - template: SAST.gitlab-ci.yml

variables:
  ## The following is added because sonar is complaining:
  ## Shallow clone detected, no blame information will be provided. You can convert to non-shallow with 'git fetch --unshallow'.
  GIT_DEPTH: 0
  DEBIAN_FRONTEND: noninteractive
  DOCKER_HOST: "tcp://docker:2375"
  # Instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""
  # Improve performance with overlayfs.
  DOCKER_DRIVER: overlay2

stages:
  - Build
  - Publish

services:
  - name: mbopm/docker-dind-alpine-healthcheck:dind-alpine
    alias: docker
    entrypoint: [ "dockerd-entrypoint.sh" ]
    command: [ "--host=tcp://0.0.0.0:2375", "--tls=false" ]

build:
  image: mbopm/openjdk-alpine-jdk:jdk21
  stage: Build
  tags:
    - docker
  script:
    - ./gradlew build jacocoTestReport -x cyclonedxBom --stacktrace
  artifacts:
    paths:
      - ./build
    expire_in: 7 days
    reports:
      junit: "**/build/test-results/test/TEST-*.xml"
  allow_failure: false
  cache:
    key: "$CI_PROJECT_PATH-slug"
    paths:
      - .gradle/
  variables:
    GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle

sonar:
  image: mbopm/openjdk-alpine-jdk:jdk21
  stage: Build
  needs:
    - job: build
      artifacts: true
  tags:
    - docker
  script:
    - ./gradlew sonar --info -Dsonar.token=$SONAR2_LOGIN_TOKEN -Dsonar.host.url=$SONAR2_URL -Dsonar.branch.name=$CI_COMMIT_REF_SLUG
  cache:
    key: "$CI_PROJECT_PATH-slug"
    paths:
      - .gradle/
  variables:
    GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle

sast:
  stage: Build
  tags:
    - docker
  artifacts:
    expire_in: 7 days
    reports:
      sast: gl-sast-report.json

gen-sbom:
  stage: Build
  image: mbopm/openjdk-alpine-jdk:jdk21
  tags:
    - docker
  artifacts:
    paths:
      - build/reports/bom.json
  script:
    - rm -f build/reports/bom.json
    - ./gradlew cyclonedxBom
  cache:
    key: "$CI_PROJECT_PATH-slug"
    paths:
      - .gradle/
  variables:
    GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle

scan:
  stage: Build
  image: ghcr.io/google/osv-scanner:latest
  tags:
    - docker
  needs:
    - job: gen-sbom
      artifacts: true
  script:
    - osv-scanner scan -r -S ./build/reports/bom.json ./

publish:
  stage: Publish
  image: docker:latest
  needs:
    - job: build
      artifacts: true
  tags:
    - docker
  variables:
    APP: t60f
  script:
    - docker login -u $DOCKER_LOGIN_USERNAME -p $DOCKER_LOGIN_PASSWORD
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker context create builder-context
    - docker buildx create --name builderx --use builder-context
    # --provenance false is a workaround for: https://gitlab.com/gitlab-org/gitlab/-/issues/389577
    - docker buildx build --build-arg BUILDKIT_INLINE_CACHE=1 --provenance false --push --platform linux/amd64,linux/arm64/v8 -t $CI_REGISTRY_IMAGE/${APP}:${CI_COMMIT_TAG} -f Dockerfile .
  only:
    - tags

sentry-release:
  stage: Publish
  image: node:23-alpine
  needs:
    - job: build
  before_script:
    - npm install -g @sentry/cli
  script:
    - sentry-cli releases new "${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}" --org dev.mbo --project t60f
    - sentry-cli releases set-commits "${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}" --auto
    - sentry-cli releases deploys "${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}" new -e "${SENTRY_ENVIRONMENT:-production}"
  only:
    - tags